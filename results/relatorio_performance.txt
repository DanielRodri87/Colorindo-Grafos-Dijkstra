================================================================================
📊 RELATÓRIO DE ANÁLISE DE PERFORMANCE
🔬 Algoritmo: Dijkstra + Welsh-Powell para Coloração de Grafos
================================================================================

📋 RESUMO EXECUTIVO
----------------------------------------
• Total de testes executados: 75
• Tamanhos de grafo analisados: [5, 10, 20, 50, 100]
• Método de geração: Erdős–Rényi com pesos aleatórios

📈 ANÁLISE DETALHADA POR TAMANHO
----------------------------------------

🔹 GRAFOS COM 5 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000076s (±0.000047s)
   🎨 Tempo Coloração: 0.000047s (±0.000023s)
   🚀 Tempo Total: 0.000123s
   💾 Memória Total: 2.03 KB
   🌈 Cores Utilizadas: 3.1 (±0.9)

🔹 GRAFOS COM 10 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000154s (±0.000046s)
   🎨 Tempo Coloração: 0.000113s (±0.000030s)
   🚀 Tempo Total: 0.000268s
   💾 Memória Total: 2.22 KB
   🌈 Cores Utilizadas: 4.5 (±0.5)

🔹 GRAFOS COM 20 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000482s (±0.000166s)
   🎨 Tempo Coloração: 0.000315s (±0.000074s)
   🚀 Tempo Total: 0.000797s
   💾 Memória Total: 4.66 KB
   🌈 Cores Utilizadas: 6.3 (±0.9)

🔹 GRAFOS COM 50 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.001361s (±0.000659s)
   🎨 Tempo Coloração: 0.000889s (±0.000262s)
   🚀 Tempo Total: 0.002250s
   💾 Memória Total: 8.66 KB
   🌈 Cores Utilizadas: 12.0 (±0.5)

🔹 GRAFOS COM 100 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.004453s (±0.001396s)
   🎨 Tempo Coloração: 0.003138s (±0.001112s)
   🚀 Tempo Total: 0.007591s
   💾 Memória Total: 22.17 KB
   🌈 Cores Utilizadas: 19.6 (±0.8)


📊 ANÁLISE DE COMPLEXIDADE OBSERVADA
----------------------------------------
• Fator médio de crescimento temporal: 2.84x
• Fator médio de crescimento de memória: 1.90x


🎯 CONCLUSÕES E INSIGHTS
----------------------------------------
• O algoritmo de Dijkstra domina o tempo de execução para grafos pequenos
• O algoritmo Welsh-Powell mantém performance consistente
• Uso de memória cresce de forma controlada
• Ordenação por Dijkstra produz colorações eficientes


💡 RECOMENDAÇÕES
----------------------------------------
• Método adequado para grafos até 100 vértices
• Para grafos maiores, considerar heurísticas alternativas
• Dijkstra + Welsh-Powell oferece boa qualidade/performance

================================================================================