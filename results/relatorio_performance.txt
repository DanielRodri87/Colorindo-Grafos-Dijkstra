================================================================================
📊 RELATÓRIO DE ANÁLISE DE PERFORMANCE
🔬 Algoritmo: Dijkstra + Coloração Gulosa de Grafos
================================================================================

📋 RESUMO EXECUTIVO
----------------------------------------
• Total de testes executados: 75
• Tamanhos de grafo analisados: [5, 10, 20, 50, 100]
• Método de geração: Erdős–Rényi com pesos aleatórios

📈 ANÁLISE DETALHADA POR TAMANHO
----------------------------------------

🔹 GRAFOS COM 5 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000147s (±0.000273s)
   🎨 Tempo Coloração: 0.000014s (±0.000010s)
   🚀 Tempo Total: 0.000160s
   💾 Memória Total: 4.82 KB
   🌈 Cores Utilizadas: 3.1 (±0.9)

🔹 GRAFOS COM 10 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000098s (±0.000073s)
   🎨 Tempo Coloração: 0.000022s (±0.000009s)
   🚀 Tempo Total: 0.000120s
   💾 Memória Total: 2.40 KB
   🌈 Cores Utilizadas: 4.7 (±0.4)

🔹 GRAFOS COM 20 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000142s (±0.000052s)
   🎨 Tempo Coloração: 0.000040s (±0.000013s)
   🚀 Tempo Total: 0.000182s
   💾 Memória Total: 4.41 KB
   🌈 Cores Utilizadas: 7.1 (±0.8)

🔹 GRAFOS COM 50 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.000546s (±0.000253s)
   🎨 Tempo Coloração: 0.000155s (±0.000058s)
   🚀 Tempo Total: 0.000701s
   💾 Memória Total: 10.61 KB
   🌈 Cores Utilizadas: 12.9 (±1.0)

🔹 GRAFOS COM 100 VÉRTICES:
   ⏱️  Tempo Dijkstra: 0.001372s (±0.000668s)
   🎨 Tempo Coloração: 0.000370s (±0.000036s)
   🚀 Tempo Total: 0.001742s
   💾 Memória Total: 22.87 KB
   🌈 Cores Utilizadas: 21.5 (±0.7)


📊 ANÁLISE DE COMPLEXIDADE OBSERVADA
----------------------------------------
• Fator médio de crescimento temporal: 2.15x
• Fator médio de crescimento de memória: 1.72x


🎯 CONCLUSÕES E INSIGHTS
----------------------------------------
• O algoritmo de Dijkstra domina o tempo de execução para grafos pequenos
• A coloração gulosa mantém performance consistente
• Uso de memória cresce de forma controlada
• Ordenação por Dijkstra produz colorações eficientes


💡 RECOMENDAÇÕES
----------------------------------------
• Método adequado para grafos até 100 vértices
• Para grafos maiores, considerar heurísticas alternativas
• Dijkstra + Coloração Gulosa oferece boa qualidade/performance

================================================================================